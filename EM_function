EM_function <- function(x, n.iter = 500){

  n = length(x)


  pi1hat = rep(NA, n.iter)
  pi2hat = rep(NA, n.iter)
  p1hat = matrix(NA, n.iter, n)
  p2hat = matrix(NA, n.iter, n)
  theta_hat = matrix(NA, n.iter, 6)
  pi1hat[1] = 0.45
  pi2hat[1] = 0.4

  p1hat[1, ] <- runif(n, pi1hat[1] - 0.35, pi1hat[1] + 0.35)
  p2hat[1, ] <- runif(n, pi2hat[1] - 0.35, pi2hat[1] + 0.35)

  theta_hat[1, ] = optim(c(-0.5,0.3,-0.5,0.5,0.3,-0.3), function(theta)
    neg.logl.up(theta, pi1hat[1], pi2hat[1], p1hat[1, ], p2hat[1, ], x))$par

  for (t in 2:n.iter) { 
    #E step: update individual probability memberships 
  
    p.temp= cbind( 
      p1hat[t-1,]*dnorm(x,theta_hat[t-1, 1],exp(theta_hat[t-1, 4])),
      p2hat[t-1,]*dnorm(x,theta_hat[t-1, 2],exp(theta_hat[t-1, 5])),
      (1 - p1hat[t-1,] - p2hat[t-1,])*dnorm(x,theta_hat[t-1, 3],exp(theta_hat[t-1, 6])))
    p1hat[t,]=p.temp[,1]/rowSums(p.temp) 
    p2hat[t,]=p.temp[,2]/rowSums(p.temp)
  
    #M step: update parameter estimates 
  
    pi1hat[t] = mean(p1hat[t,])
    pi2hat[t] = mean(p2hat[t,])
  
    theta_hat[t,]= optim(theta_hat[t-1,], function(theta)
      neg.logl.up(theta,pi1hat[t],pi2hat[t],p1hat[t,],p2hat[t,],x))$par
  }
  
  logl.last = -neg.logl(theta_hat[n.iter, ], pi1hat[n.iter], pi2hat[n.iter],
                           p1hat[n.iter, ], p2hat[n.iter, ], x)
  
  out = list('logl' = logl.last,
             'theta_hat' = c(theta_hat[n.iter,1],
                             theta_hat[n.iter,2],
                             theta_hat[n.iter,3],
                             exp(theta_hat[n.iter,4]),
                             exp(theta_hat[n.iter,5]),
                             exp(theta_hat[n.iter,6])),
             'pi' = c(pi1hat[n.iter],
                      pi2hat[n.iter],
                      1 - (pi1hat[n.iter] + pi2hat[n.iter])),
             'p1_last' = p1hat[n.iter, ],
             'p2_last' = p2hat[n.iter, ])
  
  return(out)
}
